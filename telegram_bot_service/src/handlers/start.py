from typing import Any, Dict

import structlog
from client.rest import RestClient
from client.telegram import TelegramClient

logger = structlog.get_logger()


async def handle_start(
    telegram: TelegramClient, rest: RestClient, chat_id: int, user: Dict[str, Any]
) -> None:
    """Handle /start command."""
    telegram_id = user.get("id")
    username = user.get("username")

    try:
        # Get or create user in REST service
        user_data = await rest.get_or_create_user(telegram_id, username)
        is_new_user = user_data.get("id") == telegram_id

        # Send appropriate greeting
        if is_new_user:
            message = (
                "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.\n\n"
                "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å:\n"
                "üìÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—Å—Ç—Ä–µ—á–∞–º–∏ –∏ —Å–æ–±—ã—Ç–∏—è–º–∏\n"
                "üìù –°–æ–∑–¥–∞–Ω–∏–µ–º –∑–∞–º–µ—Ç–æ–∫\n"
                "üîç –ü–æ–∏—Å–∫–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n\n"
                "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
            )
        else:
            message = "üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!\n\n" "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?"

        await telegram.send_message(chat_id, message)
        logger.info(
            "Start command handled", telegram_id=telegram_id, is_new_user=is_new_user
        )

    except Exception as e:
        error_message = (
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        await telegram.send_message(chat_id, error_message)
        logger.error(
            "Error handling start command", telegram_id=telegram_id, error=str(e)
        )
